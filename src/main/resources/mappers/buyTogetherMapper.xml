<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.buy.together.mappers.buyTogetherMapper">

	<select id="userInterestCount" resultType="Integer">
		select count(interest_number)
		from interest
		where user_number = #{user_number}
	</select>
	
	<!-- 유저 관심지역 존재 여부 -->
	<select id="userAddress" resultType="Integer">
		select count(user_address_number)
		from useraddress 
		where user_number = #{user_number}
	</select>
	
	<!-- 같이사냥 서치카운트 -->
	<select id="searchBuyTogetherCount" resultType="Integer">
		select count(bt.buytogether_number)
		from user u, buytogether bt
		left outer join buytogetheraddress addr
		on addr.buytogether_number = bt.buytogether_number 
		<where>
			u.user_number = bt.user_number
			<if test = "option == 1">
				and bt.category_number in (select category_number from interest where user_number = #{user_number})
			</if>
			<if test = "option == 2">
				and addr.buytogether_address_sido = (select user_sido from useraddress where user_number = #{user_number})
				and addr.buytogether_address_sigungu = (select user_sigungu from useraddress where user_number = #{user_number})
			</if>
		</where>
		<include refid="search"></include>
	</select>
	
		<!-- 사냥 지도 서치카운트 -->
	<select id="searchBuyTogetherMapCount" parameterType="map" resultType="Integer">
	<![CDATA[
		select count(bt.buytogether_number)
		from user u, buytogether bt, buytogetheraddress addr
		where u.user_number = bt.user_number and addr.buytogether_number = bt.buytogether_number 
				and addr.latitude > #{swLat} and addr.latitude < #{neLat}
        		and addr.longitude > #{swLng} and addr.longitude < #{neLng}
    ]]>
		<include refid="search"></include>
		
	</select>

	<!-- 사냥 지도 리스트 -->
	<select id="searchBuyTogetherMapList" resultType="com.buy.together.board.model.BuyTogetherMapDTO">
	 	<![CDATA[
        select bt.buytogether_number, bt.title, u.nickname, u.reputation, addr.latitude, addr.longitude, bt.category_number
        from user u,  buytogether bt, buytogetheraddress addr
        where u.user_number = bt.user_number 
        		and bt.buytogether_number = addr.buytogether_address_number
				and addr.latitude > #{swLat} and addr.latitude < #{neLat}
        		and addr.longitude > #{swLng} and addr.longitude < #{neLng}
		]]>

		<include refid="search"></include>
			  
		<![CDATA[ limit #{pageStart}, #{perPageNum} ]]>
	</select>

	<!-- 같이사냥리스트 -->
	<select id="searchBuyTogetherList" resultType="com.buy.together.board.model.BuyTogetherDTO">
	 	<![CDATA[
        select bt.buytogether_number, bt.title, u.nickname, u.reputation, addr.latitude, addr.longitude, bt.category_number
        from  user u, buytogether bt
        left outer join buytogetheraddress addr on addr.buytogether_number = bt.buytogether_number
		]]>
		<where>
			u.user_number = bt.user_number
			<if test = "option == 1">
				and bt.category_number in (select category_number from interest where user_number = #{user_number})
			</if>
			<if test = "option == 2">
				and addr.buytogether_address_sido = (select user_sido from useraddress where user_number = #{user_number})
				and addr.buytogether_address_sigungu = (select user_sigungu from useraddress where user_number = #{user_number})
			</if>
		</where>
		<include refid="search"></include>
		<![CDATA[
		order by buytogether_number desc
		limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<!-- 같이사냥 카테고리 조회 -->
	<select id="categoryList" resultType="Category">
		select *
		from category
	</select>
	
	<!-- 같이사냥 사냥방식 조회 -->
	<select id="huntingTypeList" resultType="HuntingType">
		select *
		from huntingtype
	</select>
	
	<!-- 같이사냥 사냥상태 조회 -->
	<select id="huntingStatusList" resultType="HuntingStatus">
		select *
		from huntingstatus
	</select>
	
	<!-- 같이사냥 게시글의 사진조회 -->
	<select id="photoList" resultType="attachedPhoto">
		select *
		from attachedphoto 
		where board_type_number = 5 and buytogether_number = #{buytogether_number}
		order by photo_number desc
	</select>
	
	<!-- 같이사냥 글쓰기 1.게시글쓰기 -->
	<insert id="buytogetherInsert">
		insert into buytogether(title, content, duedate, join_number, price, category_number, user_number, hunting_type_number)
		values(#{title}, #{content}, #{duedate}, #{join_number}, #{price}, #{category_number}, #{user_number}, #{hunting_type_number})
	</insert>
	
	<!-- 같이사냥 글쓰기 - 쓴 게시글의 게시글 번호를 받아온다 -->
	<select id="buytogetherNumber" resultType="Integer">
	select buytogether_number
	from buytogether
	where title = #{title} and content = #{content} and user_number = #{user_number}
	</select>
	
	<!-- 같이사냥 글쓰기 2.첨부사진저장 -->
	<insert id="buytogetherPhotoInsert">
		insert into attachedphoto(path, buytogether_number, board_type_number)
		values ( #{path}, #{buytogether_number}, 5)
	</insert>
	
	<!-- 같이사냥 글쓰기 3.같이사냥 주소저장 -->
	<insert id="buytogetherAddressInsert">
		insert into buytogetheraddress(latitude, longitude, buytogether_address_sido, buytogether_address_sigungu, buytogether_address_road_address, buytogether_address_detail, buytogether_number)
		values (#{latitude}, #{longitude}, #{buytogether_address_sido}, #{buytogether_address_sigungu}, #{buytogether_address_road_address}, #{buytogether_address_detail}, #{buytogether_number});
	</insert>
	
	<!-- 같이사냥 글번호로 해당글 조회 -->
	<select id="buytogetherReadOne" resultType="BuyTogether">
		select *
		from buytogether
		where buytogether_number = #{buytogether_number}
	</select>
	
		<!-- 같이사냥 글번호로 해당글 주소 조회 -->
	<select id="buytogetherAddressReadOne" resultType="BuyTogetherAddress">
		select *
		from buytogetheraddress
		where buytogether_number = #{buytogether_number}
	</select>
	
	<!-- 같이사냥 글 수정 -->
	<update id="buytogetherUpdate">
		update buytogether
		set title = #{title}, content = #{content}, category_number = #{category_number},
			hunting_type_number = #{hunting_type_number}, duedate = #{duedate},
			price = #{price}, updatedate = now(), join_number = #{join_number}
		where buytogether_number = #{buytogether_number}
	</update>
	
	<!-- 같이사냥 주소 수정 -->
	<update id="buytogetherUpdateAddress">
		update buytogetheraddress
		set latitude = #{latitude}, longitude = #{longitude}, buytogether_address_sido = #{buytogether_address_sido},
			buytogether_address_sigungu = #{buytogether_address_sigungu},
			buytogether_address_road_address = #{buytogether_address_road_address}, 
			buytogether_address_detail = #{buytogether_address_detail}
		where buytogether_number = #{buytogether_number}
	</update>
	
	<!-- 첨부사진 삭제 -->
	<delete id="deletePhotoPath">
		delete from attachedphoto
		where buytogether_number = #{buytogether_number}
	</delete>
	
	<!-- 검색용 코드 -->
	<sql id="search">
		<if test="category_number != 0 and category_number != null">
			and bt.category_number = #{category_number}
		</if>
		<if test="hunting_type_number != 0 and hunting_type_number != null">
			and bt.hunting_type_number = #{hunting_type_number}
		</if>
		<if test="hunting_type_number != 0 and hunting_type_number != null">
			and bt.hunting_type_number = #{hunting_type_number} 
		</if>
		<if test="status_number != 0 and status_number != null">
			and bt.status_number = #{status_number}
		</if>
		<if test="buytogether_address_sido != null and buytogether_address_sido != ''">
			and addr.buytogether_address_sido = #{buytogether_address_sido}
		</if>
		<if test="buytogether_address_sigungu != null and buytogether_address_sigungu != ''">
			and addr.buytogether_address_sigungu = #{buytogether_address_sigungu}
		</if>
		<if test="regDate != null and regDate != ''">
			and bt.writeDate >= date_sub(now(), interval #{regDate} day)
		</if>
		<if test="keyword != null and keyword != ''">
			and (( bt.title like CONCAT('%', #{keyword}, '%'))
			OR ( bt.content like CONCAT('%', #{keyword}, '%')))
		</if>
	</sql>
	
</mapper>




